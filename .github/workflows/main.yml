name: CI/CD
on:
  push:
    branches:
      - "*"
  workflow_dispatch:

jobs:
  build_and_deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      # - uses: subosito/flutter-action@v2
      #   with:
      #       channel: 'stable'
      # - run: flutter pub get
      # - name: Build
      #   run: |
      #     flutter build apk --flavor newDev -t lib/main.dart

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # - name: Get latest app version
      #   id: version
      #   uses: nguyentronghuan101120/get_lastest_firebase_app_version_action@master
      #   with:
      #     appId: ${{secrets.FIREBASE_APP_ID}}
      #     projectNumber: ${{secrets.PROJECT_NUMBER}}
      #     serviceAccount: ${{secrets.CREDENTIAL_FILE_CONTENT}}

      # - name: Show current version
      #   run: |
      #     echo "Build version: ${{ steps.version.outputs.buildVersion }}"
      #     echo "Build displayVersion: ${{ steps.version.outputs.displayVersion }}"
      #     echo "Build flutterVersionString: ${{ steps.version.outputs.flutterVersionString }}"
      #     echo "Build newBuildVersion: ${{ steps.version.outputs.newBuildVersion }}"
      #     echo "Build newDisplayVersion: ${{ steps.version.outputs.newDisplayVersion }}"
      #     echo "Build newFlutterVersionString: ${{ steps.version.outputs.newFlutterVersionString }}"

      - uses: hkusu/apk-info-action@v1.0.3
        id: apk-info
        with:
          apk-path: "app-release.apk"
      - name: Show apk info
        run: |
          echo '${{ steps.apk-info.outputs.application-name }}'
          echo '${{ steps.apk-info.outputs.application-id }}'
          echo '${{ steps.apk-info.outputs.version-code }}'
          echo '${{ steps.apk-info.outputs.version-name }}'
          echo '${{ steps.apk-info.outputs.min-sdk-version }}'
          echo '${{ steps.apk-info.outputs.target-sdk-version }}'
          echo '${{ steps.apk-info.outputs.compile-sdk-version }}'
          echo '${{ steps.apk-info.outputs.uses-permissions }}'
          echo '${{ steps.apk-info.outputs.debuggable }}'
          echo '${{ steps.apk-info.outputs.allow-backup }}'
          echo '${{ steps.apk-info.outputs.supports-rtl }}'
          echo '${{ steps.apk-info.outputs.file-size }}'
          echo '${{ steps.apk-info.outputs.readable-file-size }}'
        # - name: Deploy
      #   if: steps.check_version.outputs.exit_code == 0
      #   uses: wzieba/Firebase-Distribution-Github-Action@v1.7.0
      #   with:
      #     serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
      #     file: app-release.apk
      #     groups: tester
      #     appId: ${{secrets.FIREBASE_APP_ID}}
